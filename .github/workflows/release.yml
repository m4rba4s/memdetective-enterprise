name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build Release Artifacts
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x86_64
            deps: sudo apt-get update && sudo apt-get install -y build-essential libyara-dev libncurses5-dev pkg-config libssl-dev
          - os: ubuntu-20.04
            target: linux-x86_64-ubuntu20
            deps: sudo apt-get update && sudo apt-get install -y build-essential libyara-dev libncurses5-dev pkg-config libssl-dev
          - os: macos-latest
            target: macos-universal
            deps: brew install yara ncurses pkg-config openssl
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: ${{ matrix.deps }}
    
    - name: Build release binary
      run: |
        make clean
        make release -j$(nproc || sysctl -n hw.ncpu)
    
    - name: Create release archive
      run: |
        mkdir -p dist
        tar -czf dist/memory-inspector-${{ matrix.target }}.tar.gz memory-inspector README.md LICENSE examples/
    
    - name: Generate SBOM
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Install syft for SBOM generation
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
        syft . -o spdx-json > dist/memory-inspector-${{ matrix.target }}-sbom.json
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: memory-inspector-${{ matrix.target }}
        path: dist/
        retention-days: 90

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64