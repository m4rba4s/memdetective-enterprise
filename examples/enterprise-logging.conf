# Memory Inspector CLI - Enterprise Logging Configuration
# 
# Ultra enterprise-grade logging configuration for production deployments
# Supports SIEM integration, secret masking, log rotation, and remote endpoints

[logging]
# Application identification
application_name = "memory-inspector-cli"
version = "1.0.0" 
environment = "production"  # dev, staging, production
datacenter = "dc-east-1"
node_id = "mi-node-001"

# Log levels: TRACE, DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY
min_level = "INFO"

# Output format: TEXT, JSON, CEF, LEEF, SYSLOG_RFC5424
output_format = "JSON"

# Log targets (bitwise combination)
# CONSOLE=1, FILE=2, SYSLOG=4, REMOTE_SYSLOG=8, WEBHOOK=16, KAFKA=32, ELASTICSEARCH=64, SPLUNK=128
targets = 22  # FILE + SYSLOG + WEBHOOK

[file_logging]
# File path for local logging
log_file_path = "/var/log/memory-inspector/memory-inspector.log"

# Log rotation settings
enable_rotation = true
max_file_size_mb = 100
max_file_age_hours = 24
max_rotated_files = 30
compress_rotated = true
rotation_suffix = "%Y%m%d_%H%M%S"

[secret_masking]
# Enable automatic secret masking in log messages
enable_masking = true
mask_character = "*"
preserve_original_length = false
log_masking_events = true

# Regex patterns for secret detection
masking_patterns = [
    # API Keys and tokens
    "(?i)(api[_-]?key|token|secret)[\"\\s]*[:=][\"\\s]*([a-zA-Z0-9]{20,})",
    # Credit card numbers
    "\\b(?:\\d{4}[\\s-]?){3}\\d{4}\\b",
    # Social Security Numbers
    "\\b\\d{3}-\\d{2}-\\d{4}\\b",
    # Email addresses (partial masking)
    "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b",
    # IP addresses in sensitive contexts
    "(?i)(password|secret|key)[\\s:=]+\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
    # Base64 encoded data (potential secrets)
    "(?i)(password|secret|key)[\\s:=]+[A-Za-z0-9+/]{20,}={0,2}",
    # JWT tokens
    "eyJ[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+\\.[A-Za-z0-9_-]+",
    # Private keys
    "-----BEGIN [A-Z ]+PRIVATE KEY-----",
    # AWS access keys
    "AKIA[0-9A-Z]{16}",
    # Slack tokens
    "xox[baprs]-[0-9a-zA-Z-]+",
    # GitHub tokens
    "ghp_[a-zA-Z0-9]{36}"
]

[syslog]
# Local syslog configuration
facility = "LOG_USER"
include_pid = true

# Remote syslog server
remote_enabled = false
remote_hostname = "syslog.company.com"
remote_port = 514
remote_protocol = "UDP"  # UDP or TCP
remote_use_tls = false
remote_ca_cert = "/etc/ssl/certs/ca-bundle.crt"

[webhook]
# Webhook endpoint for SIEM integration
enabled = true
url = "https://siem.company.com/api/v1/logs"
timeout_ms = 5000
auth_header = "Authorization: Bearer YOUR_API_TOKEN_HERE"
content_type = "application/json"
verify_ssl = true

# Batching for performance
batch_size = 100
batch_timeout_ms = 10000

[elasticsearch]
# Direct Elasticsearch integration
enabled = false
endpoint = "https://elasticsearch.company.com:9200"
index_pattern = "memory-inspector-%Y.%m.%d"
username = "memory_inspector"
password = "YOUR_PASSWORD_HERE"
ca_cert = "/etc/ssl/certs/elasticsearch-ca.pem"

[splunk]
# Splunk HTTP Event Collector
enabled = false
hec_endpoint = "https://splunk.company.com:8088/services/collector"
hec_token = "YOUR_HEC_TOKEN_HERE"
index = "security"
source = "memory_inspector"
sourcetype = "memory_inspector:json"

[kafka]
# Kafka producer for streaming logs
enabled = false
brokers = "kafka1.company.com:9092,kafka2.company.com:9092"
topic = "security-logs"
client_id = "memory-inspector-cli"
compression = "gzip"
batch_size = 16384
linger_ms = 100

[performance]
# Asynchronous logging for high performance
async_logging = true
buffer_size_kb = 64
flush_interval_ms = 1000

# Backpressure handling
max_queue_size = 10000
drop_on_full_queue = false
warn_on_queue_full = true

[security]
# Security-focused settings
secure_erase_buffers = true
audit_log_access = true
encrypt_log_files = false
log_file_permissions = "0600"

# Rate limiting to prevent log flooding
enable_rate_limiting = true
max_messages_per_second = 1000
burst_limit = 5000

[observability]
# Metrics collection about logging itself
enable_metrics = true
metrics_file = "/var/log/memory-inspector/logging-metrics.json"
metrics_interval_seconds = 60

# Health checks
enable_health_endpoint = false
health_port = 8081
health_path = "/health"

[alerts]
# Alerting on logging issues
enable_alerts = true
alert_webhook = "https://alerts.company.com/webhook"

# Alert conditions
alert_on_disk_full = true
alert_on_remote_failure = true
alert_on_high_error_rate = true
alert_on_rotation_failure = true

[compliance]
# Compliance and audit settings
retain_logs_days = 2555  # 7 years for financial compliance
gdpr_compliance = true
pci_compliance = false
sox_compliance = true

# Data classification
classify_sensitive_data = true
redact_pii = true
encrypt_sensitive_logs = true

[integration]
# Integration with external systems
enable_opentelemetry = false
otel_endpoint = "http://jaeger.company.com:14268/api/traces"

# Custom log processors
enable_custom_processors = false
processor_plugins_dir = "/etc/memory-inspector/plugins"

[troubleshooting]
# Debugging the logging system itself
debug_logging_system = false
log_to_stderr_on_failure = true
fallback_to_console = true
ignore_remote_failures = false

# Self-diagnostics
enable_self_check = true
self_check_interval_minutes = 30
log_system_health = true